using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.UI; using System.Web.UI.WebControls; using System.Data; using System.Drawing; using System.IO; using System.Drawing.Imaging; using QRCoder; public partial class Login : System.Web.UI.Page { Criptografia cripto = new Criptografia("NEON"); String tipousu; protected void Page_Load(object sender, EventArgs e) { if(!IsPostBack)Session["tipo"] = string.Empty; QRCodeGenerator generator = new QRCodeGenerator(); Random r = new Random((int)DateTime.Now.Ticks); String numfinal = r.Next(1,16).ToString() + r.Next(16,32).ToString() + r.Next(32,64).ToString() + r.Next(64,128).ToString() + r.Next(128,256).ToString(); QRCodeGenerator.QRCode qr = generator.CreateQrCode(numfinal, QRCodeGenerator.ECCLevel.Q); Bitmap img = qr.GetGraphic(16); MemoryStream memo = new MemoryStream(); img.Save(memo, ImageFormat.Png); byte[] b = memo.ToArray(); imgQRCode.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(b); } protected void btnLogin_Click(object sender, EventArgs e) { try { if (txtEmail.Text == string.Empty && txtSenha.Text == string.Empty && Session["tipo"].ToString() != "Cliente Físico" || txtEmail.Text == string.Empty || txtSenha.Text == string.Empty || txtEmail.Text == string.Empty && txtSenha.Text == string.Empty && Session["tipo"].ToString() != "Empresa") { lblErro.Text = "PREENCHA OS CAMPOS VAZIOS!"; txtEmail.Text = string.Empty; if (txtEmail.Text == string.Empty) { txtEmail.BorderColor = Color.Red; } if (txtSenha.Text == string.Empty) { txtSenha.BorderColor = Color.Red; } } else { sqlLogin.SelectParameters["email"].DefaultValue = cripto.Encrypt(txtEmail.Text); sqlLogin.SelectParameters["senha"].DefaultValue = cripto.Encrypt(txtSenha.Text); Session["PARAsenha"] = txtSenha.Text; sqlLogin.SelectParameters["tipo"].DefaultValue = cripto.Encrypt(Session["tipo"].ToString()); DataView dv = (DataView)sqlLogin.Select(DataSourceSelectArguments.Empty); sqlLoginEmpresa.SelectParameters["email"].DefaultValue = cripto.Encrypt(txtEmail.Text); sqlLoginEmpresa.SelectParameters["senha"].DefaultValue = cripto.Encrypt(txtSenha.Text); DataView dv2 = (DataView)sqlLoginEmpresa.Select(DataSourceSelectArguments.Empty); if (dv.Table.Rows.Count == 0 && dv2.Table.Rows.Count == 0) { erroLogin(); int cont = Contador.erros++; if (cont >= 3) { lblDigTxt.Visible = true; cvValido.Visible = true; imgCaptcha.Visible = true; Captcha.Visible = true; txtCaptcha.Visible = true; } } else { if (txtCaptcha.Visible == true) { if (Session["captchaValido"].ToString() == "OK") logando(); else erroLogin(); } else { logando(); } } } } catch(System.Data.SqlClient.SqlException) { Email.erro("Login.aspx"); lblErro.Text = "ERRO! TENTE NOVAMENTE MAIS TARDE"; } } void logando() { sqlGetEmailnNameUsu.SelectParameters["email"].DefaultValue = cripto.Encrypt(txtEmail.Text); sqlGetEmailnNameEmp.SelectParameters["email"].DefaultValue = cripto.Encrypt(txtEmail.Text); DataView dv = (DataView)sqlLogin.Select(DataSourceSelectArguments.Empty); DataView dv2 = (DataView)sqlLoginEmpresa.Select(DataSourceSelectArguments.Empty); DataView dv3 = (DataView)sqlGetEmailnNameUsu.Select(DataSourceSelectArguments.Empty); DataView dv4=(DataView)sqlGetEmailnNameEmp.Select(DataSourceSelectArguments.Empty); if (dv.Table.Rows.Count > 0) { if (tipousu == "Usuario") { Session["login"] = "OK"; Session["emailusu"] = cripto.Encrypt(txtEmail.Text); sqlIdUsu.SelectParameters["email"].DefaultValue = cripto.Encrypt(txtEmail.Text); DataView dvLogin = (DataView)sqlLogin.Select(DataSourceSelectArguments.Empty); DataView dvUsu = (DataView)sqlIdUsu.Select(DataSourceSelectArguments.Empty); Session["getIdUsu"] = dvUsu.Table.Rows[0]["id"].ToString(); Session["getTipoUsu"] = tipousu.ToString(); Session["PARAsenha"] =cripto.Decrypt(dvLogin.Table.Rows[0]["senha"].ToString()); if (dv3.Table.Rows[0]["ativo_usu"].ToString() == "0") { Session["nomeusuWB"] = cripto.Decrypt(dv3.Table.Rows[0]["nome_usu"].ToString()); Session["emailusuWB"] = cripto.Decrypt(dv3.Table.Rows[0]["email_usu"].ToString()); } sqlLogin.UpdateParameters["id"].DefaultValue = Session["getIdUsu"].ToString(); sqlLogin.Update(); aud_usu(); sqlLogin.Insert(); Response.Redirect("usuarioHome.aspx"); } } if (dv2.Table.Rows.Count > 0) { if (tipousu == "Empresa") { Session["loginEmp"] = "OK"; Session["empresa"] = cripto.Encrypt(txtEmail.Text); sqlIdEmp.SelectParameters["email"].DefaultValue = cripto.Encrypt(txtEmail.Text); DataView idEmp = (DataView)sqlIdEmp.Select(DataSourceSelectArguments.Empty); Session["idEmp"] = idEmp.Table.Rows[0]["id"].ToString(); Session["getTipoUsu"] = tipousu.ToString(); if (dv4.Table.Rows[0]["ativo_emp"].ToString() == "0") { Session["nomeWB"] = cripto.Decrypt(dv4.Table.Rows[0]["responsavel_emp"].ToString()); Session["emailWB"] = cripto.Decrypt(dv4.Table.Rows[0]["email_emp"].ToString()); } sqlLoginEmpresa.UpdateParameters["id"].DefaultValue = Session["idEmp"].ToString(); sqlLoginEmpresa.Update(); aud_emp(); sqlLoginEmpresa.Insert(); Response.Redirect("empHome.aspx"); } else { erroLogin(); } } } void erroLogin() { lblErro.Text = "HÁ CAMPOS INCORRETOS, TENTE NOVAMENTE."; txtEmail.Text = string.Empty; txtEmail.BorderColor = Color.Red; txtSenha.BorderColor = Color.Red; } private void aud_usu() { sqlLogin.InsertParameters["id"].DefaultValue = Session["getIdUsu"].ToString(); sqlLogin.InsertParameters["table"].DefaultValue = "usuario"; sqlLogin.InsertParameters["desc"].DefaultValue = "Logou na conta"; string hr = DateTime.Now.Hour.ToString() + ":" + DateTime.Now.Minute.ToString("0#"); sqlLogin.InsertParameters["hr"].DefaultValue = hr; string data = DateTime.Now.Date.ToShortDateString(); sqlLogin.InsertParameters["data"].DefaultValue = data; } private void aud_emp() { sqlLoginEmpresa.InsertParameters["id"].DefaultValue = Session["idEmp"].ToString(); sqlLoginEmpresa.InsertParameters["table"].DefaultValue = "cliente_emp"; sqlLoginEmpresa.InsertParameters["desc"].DefaultValue = "Logou na conta"; string hr = DateTime.Now.Hour.ToString() + ":" + DateTime.Now.Minute.ToString("0#"); sqlLoginEmpresa.InsertParameters["hr"].DefaultValue = hr; string data = DateTime.Now.Date.ToShortDateString(); sqlLoginEmpresa.InsertParameters["data"].DefaultValue = data; } protected void ValidateCaptcha(object sender, ServerValidateEventArgs e) { Captcha.ValidateCaptcha(txtCaptcha.Text.Trim()); e.IsValid = Captcha.UserValidated; if (e.IsValid) { txtCaptcha.BorderColor = Color.Empty; lblCapVal.Visible = true; cvValido.Visible = false; Session["captchaValido"] = "OK"; } else { Session["captchaValido"] = "NOT OK"; cvValido.Visible = true; lblCapVal.Visible = false; txtCaptcha.BorderColor = Color.Red; txtCaptcha.Text = string.Empty; } } protected void Timer1_Tick(object sender, EventArgs e) { try { DataView dv = (DataView)sqlLoginQR.Select(DataSourceSelectArguments.Empty); for (int i = 0; i < dv.Table.Rows.Count; i++) { DateTime dtQr = Convert.ToDateTime(dv.Table.Rows[i]["dthr_qrc"].ToString()); int min = dtQr.Minute; int segundos = dtQr.Second; if (dv.Table.Rows[i]["ativo_qrc"].ToString() == "1" && min == DateTime.Now.Minute && segundos >= DateTime.Now.Second) { sqlLogin.SelectParameters["email"].DefaultValue = dv.Table.Rows[i]["login_qrc"].ToString(); sqlLogin.SelectParameters["senha"].DefaultValue = dv.Table.Rows[i]["senha_qrc"].ToString(); tipousu = "Usuario"; sqlLogin.SelectParameters["tipo"].DefaultValue = cripto.Encrypt(tipousu); Session["login"] = "OK"; Session["emailusu"] = dv.Table.Rows[i]["login_qrc"].ToString(); sqlIdUsu.SelectParameters["email"].DefaultValue = dv.Table.Rows[i]["login_qrc"].ToString(); DataView dvLogin = (DataView)sqlLogin.Select(DataSourceSelectArguments.Empty); DataView dvUsu = (DataView)sqlIdUsu.Select(DataSourceSelectArguments.Empty); Session["getIdUsu"] = dvUsu.Table.Rows[0]["id"].ToString(); Session["getTipoUsu"] = tipousu.ToString(); Session["PARAsenha"] = cripto.Decrypt(dvLogin.Table.Rows[0]["senha"].ToString()); sqlLogin.UpdateParameters["id"].DefaultValue = Session["getIdUsu"].ToString(); sqlLogin.Update(); aud_usu(); sqlLogin.Insert(); Response.Redirect("usuarioHome.aspx"); } else if (dv.Table.Rows[i]["ativo_qrc"].ToString() == "1") { sqlQRCode.UpdateParameters["id"].DefaultValue = dv.Table.Rows[i]["id_qrc"].ToString(); sqlQRCode.Update(); Response.Redirect(Request.RawUrl); } } } catch { Email.erro("Login.aspx"); lblErro.Text = "ERRO! TENTE NOVAMENTE MAIS TARDE."; } } protected void rblTipoUsu_SelectedIndexChanged(object sender, EventArgs e) { if (rblTipoUsu.SelectedValue == "Cliente Físico") { tipousu = "Usuario"; } if (rblTipoUsu.SelectedValue == "Empresa") { tipousu = "Empresa"; } Session["tipo"] = tipousu; } }